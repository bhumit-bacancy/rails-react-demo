{"ast":null,"code":"var _jsxFileName = \"/home/bhumit/react/demo/src/components/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  user: {},\n  isLoggedIn: false,\n  login: userData => {},\n  logout: () => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const initialuser = localStorage.getItem('user');\n  const initialLogin = localStorage.getItem('isLogin');\n  const [userIsLoggedIn, setUserIsLoggedIn] = useState(initialLogin);\n  const [loginUser, setLoginUser] = useState(initialuser);\n\n  const logoutHandler = () => {\n    setUser(null);\n    setUserIsLoggedIn(false);\n    localStorage.removeItem('user');\n    localStorage.removeItem('isLogin');\n  };\n\n  const loginHandler = userData => {\n    localStorage.setItem('user', user);\n    localStorage.setItem('isLogin', true);\n    setUser(userData);\n    setUserIsLoggedIn(true);\n  };\n\n  const contextValue = {\n    user: user,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"hdDZpNFVd6ZW2mVuoKhbxMPIfnQ=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/home/bhumit/react/demo/src/components/store/auth-context.js"],"names":["React","useState","useEffect","useCallback","AuthContext","createContext","user","isLoggedIn","login","userData","logout","AuthContextProvider","props","initialuser","localStorage","getItem","initialLogin","userIsLoggedIn","setUserIsLoggedIn","loginUser","setLoginUser","logoutHandler","setUser","removeItem","loginHandler","setItem","contextValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;;AAEA,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAN,CAAoB;AACtCC,EAAAA,IAAI,EAAE,EADgC;AAEtCC,EAAAA,UAAU,EAAE,KAF0B;AAGtCC,EAAAA,KAAK,EAAGC,QAAD,IAAc,CAAE,CAHe;AAItCC,EAAAA,MAAM,EAAE,MAAM,CAAE;AAJsB,CAApB,CAApB;AAOA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAMC,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAApB;AACA,QAAMC,YAAY,GAAGF,YAAY,CAACC,OAAb,CAAqB,SAArB,CAArB;AACA,QAAM,CAACE,cAAD,EAAiBC,iBAAjB,IAAsCjB,QAAQ,CAACe,YAAD,CAApD;AAEA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAACY,WAAD,CAA1C;;AAGA,QAAMQ,aAAa,GAAG,MAAM;AAC1BC,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAJ,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAJ,IAAAA,YAAY,CAACS,UAAb,CAAwB,MAAxB;AACAT,IAAAA,YAAY,CAACS,UAAb,CAAwB,SAAxB;AACD,GALD;;AAOA,QAAMC,YAAY,GAAIf,QAAD,IAAc;AACjCK,IAAAA,YAAY,CAACW,OAAb,CAAqB,MAArB,EAA6BnB,IAA7B;AACAQ,IAAAA,YAAY,CAACW,OAAb,CAAqB,SAArB,EAA+B,IAA/B;AACAH,IAAAA,OAAO,CAACb,QAAD,CAAP;AACAS,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,GALD;;AAOA,QAAMQ,YAAY,GAAG;AACnBpB,IAAAA,IAAI,EAAEA,IADa;AAEnBC,IAAAA,UAAU,EAAEU,cAFO;AAGnBT,IAAAA,KAAK,EAAEgB,YAHY;AAInBd,IAAAA,MAAM,EAAEW;AAJW,GAArB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEK,YAA7B;AAAA,cACGd,KAAK,CAACe;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAlCM;;GAAMhB,mB;;KAAAA,mB;AAoCb,eAAeP,WAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nconst AuthContext = React.createContext({\n  user: {},\n  isLoggedIn: false,\n  login: (userData) => {},\n  logout: () => {},\n});\n\nexport const AuthContextProvider = (props) => {\n  const initialuser = localStorage.getItem('user')\n  const initialLogin = localStorage.getItem('isLogin')\n  const [userIsLoggedIn, setUserIsLoggedIn] = useState(initialLogin);\n\n  const [loginUser, setLoginUser] = useState(initialuser);\n\n\n  const logoutHandler = () => {\n    setUser(null);\n    setUserIsLoggedIn(false)\n    localStorage.removeItem('user')\n    localStorage.removeItem('isLogin')\n  }\n\n  const loginHandler = (userData) => {\n    localStorage.setItem('user', user)\n    localStorage.setItem('isLogin',true)\n    setUser(userData);\n    setUserIsLoggedIn(true)\n  };\n\n  const contextValue = {\n    user: user,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"]},"metadata":{},"sourceType":"module"}