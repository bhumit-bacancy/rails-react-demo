{"ast":null,"code":"var _jsxFileName = \"/home/bhumit/react/demo/src/components/Profile/ProfileForm.js\",\n    _s = $RefreshSig$();\n\nimport classes from './ProfileForm.module.css';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { useContext, useRef, useState } from \"react\";\nimport AuthContext from \"../store/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileForm = () => {\n  _s();\n\n  const history = useHistory();\n  const authCtx = useContext(AuthContext);\n  const userId = authCtx.userId;\n  const [error, setError] = useState(null);\n  const oldPasswordInputRef = useRef();\n  const newPasswordInputRef = useRef();\n  const confirmNewPasswordInputRef = useRef();\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredOldPassword = oldPasswordInputRef.current.value;\n    const enteredNewPassword = newPasswordInputRef.current.value;\n    const enteredConfirmNewPassword = confirmNewPasswordInputRef.current.value; // console.log((enteredConfirmNewPassword === enteredNewPassword))\n\n    if (enteredConfirmNewPassword !== enteredNewPassword) {\n      setError(\"new password and confirm new password should be match!!\");\n    } else {\n      changePasswordHandler(enteredOldPassword, enteredNewPassword);\n    }\n  };\n\n  const changePasswordHandler = (oldPass, newPass) => {\n    axios.post(\"http://localhost:3001/change_password\", {\n      user: {\n        id: userId,\n        old_password: oldPass,\n        new_password: newPass\n      }\n    }, {\n      withCredentials: true\n    }).then(response => {\n      if (response.data.status === \"success\") {\n        console.log(response.data); // history.replace(\"/articles\")\n      }\n    }).catch(error => {\n      console.log(\"error : \", error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    className: classes.form,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"old-password\",\n        children: \"Old Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"old-password\",\n        ref: oldPasswordInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"new-password\",\n        children: \"New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"new-password\",\n        ref: newPasswordInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"new-password-confirm\",\n        children: \"Confirm new Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"new-password-confirm\",\n        ref: confirmNewPasswordInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: \"color: red;\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.action,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Change Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProfileForm, \"Q9ERq354DMI81xKiPPgRPbspxCc=\", false, function () {\n  return [useHistory];\n});\n\n_c = ProfileForm;\nexport default ProfileForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileForm\");","map":{"version":3,"sources":["/home/bhumit/react/demo/src/components/Profile/ProfileForm.js"],"names":["classes","axios","useHistory","useContext","useRef","useState","AuthContext","ProfileForm","history","authCtx","userId","error","setError","oldPasswordInputRef","newPasswordInputRef","confirmNewPasswordInputRef","submitHandler","event","preventDefault","enteredOldPassword","current","value","enteredNewPassword","enteredConfirmNewPassword","changePasswordHandler","oldPass","newPass","post","user","id","old_password","new_password","withCredentials","then","response","data","status","console","log","catch","form","control","action"],"mappings":"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","sourcesContent":["import classes from './ProfileForm.module.css';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { useContext, useRef, useState } from \"react\";\nimport AuthContext from \"../store/auth-context\";\n\nconst ProfileForm = () => {\n  const history = useHistory();\n  const authCtx = useContext(AuthContext);\n  const userId = authCtx.userId;\n  const [error, setError] = useState(null);\n  const oldPasswordInputRef = useRef();\n  const newPasswordInputRef = useRef();\n  const confirmNewPasswordInputRef = useRef();\n\n  const submitHandler = (event) => {\n    event.preventDefault()\n    const enteredOldPassword = oldPasswordInputRef.current.value;\n    const enteredNewPassword = newPasswordInputRef.current.value;\n    const enteredConfirmNewPassword = confirmNewPasswordInputRef.current.value;\n    // console.log((enteredConfirmNewPassword === enteredNewPassword))\n\n    if (enteredConfirmNewPassword !== enteredNewPassword){\n      setError(\"new password and confirm new password should be match!!\")\n    }\n    else{\n    changePasswordHandler(enteredOldPassword, enteredNewPassword)\n    }\n  }\n\n\n  const changePasswordHandler = (oldPass, newPass) => {\n    axios\n    .post(\"http://localhost:3001/change_password\",{\n        user: {\n          id: userId,\n          old_password: oldPass,\n          new_password: newPass,\n        }\n      }, { withCredentials: true })\n    .then((response) => {\n      if (response.data.status === \"success\") {\n        console.log(response.data)\n        // history.replace(\"/articles\")\n      }\n    })\n    .catch((error) => {\n      console.log(\"error : \", error);\n    });\n  }\n\n  return (\n    <form onSubmit={submitHandler} className={classes.form}>\n      <div className={classes.control}>\n        <label htmlFor='old-password'>Old Password</label>\n        <input type='password' id='old-password' ref={oldPasswordInputRef} />\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='new-password'>New Password</label>\n        <input type='password' id='new-password' ref={newPasswordInputRef}/>\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='new-password-confirm'>Confirm new Password</label>\n        <input type='password' id='new-password-confirm' ref={confirmNewPasswordInputRef}/>\n      </div>\n      {error && <p style=\"color: red;\">{error}</p>}\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n    </form>\n  );\n}\n\nexport default ProfileForm;\n"]},"metadata":{},"sourceType":"module"}