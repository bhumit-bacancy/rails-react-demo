{"ast":null,"code":"var _jsxFileName = \"/home/bhumit/react/demo/src/components/Auth/AuthForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useContext } from 'react';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport AuthContext from \"../store/auth-context\";\nimport classes from './AuthForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthForm = () => {\n  _s();\n\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const confirmPasswordInputRef = useRef();\n  const authCtx = useContext(AuthContext);\n  const [isLogin, setIsLogin] = useState(true);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin(prevState => !prevState);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (isLogin) {\n      const enteredEmail = emailInputRef.current.value;\n      const enteredPassword = passwordInputRef.current.value;\n      axios.post(\"http://localhost:3001/sessions\", {\n        user: {\n          email: enteredEmail,\n          password: enteredPassword\n        }\n      }, {\n        withCredentials: true\n      }).then(response => {\n        if (response.data.logged_in) {\n          authCtx.login(response.data.user);\n          history.replace(\"/\");\n        }\n      }).catch(error => {\n        console.log(\" login Error : \", error);\n      });\n    } else {\n      const enteredEmail = emailInputRef.current.value;\n      const enteredPassword = passwordInputRef.current.value;\n      const enteredConfirmPassword = confirmPasswordInputRef.current.value;\n      axios.post(\"http://localhost:3001/registrations\", {\n        user: {\n          email: enteredEmail,\n          password: enteredPassword,\n          password_confirmation: enteredConfirmPassword\n        }\n      }, {\n        withCredentials: true\n      }).then(response => {\n        if (response.data.status === 'created') {\n          console.log(response);\n        }\n      }).catch(error => {\n        console.log(\"Error : \", error);\n      });\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [!isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirm-password\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          ref: confirmPasswordInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          ref: emailInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          ref: passwordInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), !isLogin && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirm-password\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          ref: confirmPasswordInputRef,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthForm, \"6Zf92oLabK2vJVY3hfDULTZw7oY=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthForm;\nexport default AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["/home/bhumit/react/demo/src/components/Auth/AuthForm.js"],"names":["useState","useRef","useContext","axios","useHistory","AuthContext","classes","AuthForm","history","emailInputRef","passwordInputRef","confirmPasswordInputRef","authCtx","isLogin","setIsLogin","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","post","user","email","password","withCredentials","then","response","data","logged_in","login","replace","catch","error","console","log","enteredConfirmPassword","password_confirmation","status","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef, useContext } from 'react';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport AuthContext from \"../store/auth-context\";\nimport classes from './AuthForm.module.css';\n\nconst AuthForm = () => {\n  const history = useHistory();\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const confirmPasswordInputRef = useRef();\n\n  const authCtx = useContext(AuthContext)\n  const [isLogin, setIsLogin] = useState(true);\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if (isLogin){\n      const enteredEmail = emailInputRef.current.value;\n      const enteredPassword = passwordInputRef.current.value;\n      axios\n      .post(\n        \"http://localhost:3001/sessions\",\n        {\n          user: {\n            email: enteredEmail,\n            password: enteredPassword,\n          },\n        },\n        { withCredentials: true }\n      )\n      .then((response) => {\n        if (response.data.logged_in) {\n          authCtx.login(response.data.user)\n          history.replace(\"/\")\n        }\n      })\n      .catch((error) => {\n        console.log(\" login Error : \", error);\n      });\n\n    } else {\n      const enteredEmail = emailInputRef.current.value;\n      const enteredPassword = passwordInputRef.current.value;\n      const enteredConfirmPassword = confirmPasswordInputRef.current.value;\n\n      axios.post(\"http://localhost:3001/registrations\", {\n        user: {\n          email: enteredEmail,\n          password: enteredPassword,\n          password_confirmation: enteredConfirmPassword\n        }\n      }, \n      {withCredentials: true}\n      ).then(response => {\n        if(response.data.status === 'created'){\n          console.log(response)\n        }\n      }).catch(error => {\n        console.log(\"Error : \", error)\n      })\n    };\n    }\n    \n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        {!isLogin &&\n          <div className={classes.control}>\n            <label htmlFor='confirm-password'>Confirm Password</label>\n            <input type='password' id='password' ref={confirmPasswordInputRef} required />\n          </div>}\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' ref={emailInputRef} required />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input type='password' id='password' ref={passwordInputRef} required />\n        </div>\n        {!isLogin &&\n          <div className={classes.control}>\n            <label htmlFor='confirm-password'>Confirm Password</label>\n            <input type='password' id='password' ref={confirmPasswordInputRef} required />\n          </div>}\n        <div className={classes.actions}>\n          <button>{isLogin ? 'Login' : 'Create Account'}</button>\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}