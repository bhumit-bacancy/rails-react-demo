{"ast":null,"code":"var _jsxFileName = \"/home/bhumit/react/demo/src/components/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  username: '',\n  userId: '',\n  isLoggedIn: false,\n  login: userData => {},\n  logout: () => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const initialId = localStorage.getItem('id');\n  const initialUsername = localStorage.getItem('username');\n  const initialLogin = localStorage.getItem('isLogin');\n  const [userIsLoggedIn, setUserIsLoggedIn] = useState(initialLogin);\n  const [userId, setUserId] = useState(initialId);\n  const [loginUsername, setLoginUsername] = useState(initialUsername);\n\n  const logoutHandler = () => {\n    setLoginUsername(null);\n    setUserIsLoggedIn(false);\n    localStorage.removeItem('user');\n    localStorage.removeItem('isLogin');\n  };\n\n  const loginHandler = userData => {\n    localStorage.setItem('username', userData.username);\n    localStorage.setItem('id', userData.id);\n    localStorage.setItem('isLogin', true);\n    setLoginUsername(userData.username);\n    setUserId(userData.id);\n    setUserIsLoggedIn(true);\n  }; // console.log(loginUser);\n\n\n  const contextValue = {\n    user: loginUser,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"zIxsZOodtF+OzrAdFemDkvyCKNQ=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/home/bhumit/react/demo/src/components/store/auth-context.js"],"names":["React","useState","useEffect","useCallback","AuthContext","createContext","username","userId","isLoggedIn","login","userData","logout","AuthContextProvider","props","initialId","localStorage","getItem","initialUsername","initialLogin","userIsLoggedIn","setUserIsLoggedIn","setUserId","loginUsername","setLoginUsername","logoutHandler","removeItem","loginHandler","setItem","id","contextValue","user","loginUser","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;;AAEA,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAN,CAAoB;AACtCC,EAAAA,QAAQ,EAAE,EAD4B;AAEtCC,EAAAA,MAAM,EAAE,EAF8B;AAGtCC,EAAAA,UAAU,EAAE,KAH0B;AAItCC,EAAAA,KAAK,EAAGC,QAAD,IAAc,CAAE,CAJe;AAKtCC,EAAAA,MAAM,EAAE,MAAM,CAAE;AALsB,CAApB,CAApB;AAQA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAlB;AACA,QAAMC,eAAe,GAAGF,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAxB;AACA,QAAME,YAAY,GAAGH,YAAY,CAACC,OAAb,CAAqB,SAArB,CAArB;AACA,QAAM,CAACG,cAAD,EAAiBC,iBAAjB,IAAsCnB,QAAQ,CAACiB,YAAD,CAApD;AACA,QAAM,CAACX,MAAD,EAASc,SAAT,IAAsBpB,QAAQ,CAACa,SAAD,CAApC;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCtB,QAAQ,CAACgB,eAAD,CAAlD;;AAGA,QAAMO,aAAa,GAAG,MAAM;AAC1BD,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAH,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAL,IAAAA,YAAY,CAACU,UAAb,CAAwB,MAAxB;AACAV,IAAAA,YAAY,CAACU,UAAb,CAAwB,SAAxB;AACD,GALD;;AAOA,QAAMC,YAAY,GAAIhB,QAAD,IAAc;AACjCK,IAAAA,YAAY,CAACY,OAAb,CAAqB,UAArB,EAAiCjB,QAAQ,CAACJ,QAA1C;AACAS,IAAAA,YAAY,CAACY,OAAb,CAAqB,IAArB,EAA0BjB,QAAQ,CAACkB,EAAnC;AACAb,IAAAA,YAAY,CAACY,OAAb,CAAqB,SAArB,EAA+B,IAA/B;AACAJ,IAAAA,gBAAgB,CAACb,QAAQ,CAACJ,QAAV,CAAhB;AACAe,IAAAA,SAAS,CAACX,QAAQ,CAACkB,EAAV,CAAT;AACAR,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,GAPD,CAhB4C,CAyB5C;;;AAEA,QAAMS,YAAY,GAAG;AACnBC,IAAAA,IAAI,EAAEC,SADa;AAEnBvB,IAAAA,UAAU,EAAEW,cAFO;AAGnBV,IAAAA,KAAK,EAAEiB,YAHY;AAInBf,IAAAA,MAAM,EAAEa;AAJW,GAArB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEK,YAA7B;AAAA,cACGhB,KAAK,CAACmB;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAvCM;;GAAMpB,mB;;KAAAA,mB;AAyCb,eAAeR,WAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nconst AuthContext = React.createContext({\n  username: '',\n  userId: '',\n  isLoggedIn: false,\n  login: (userData) => {},\n  logout: () => {},\n});\n\nexport const AuthContextProvider = (props) => {\n  const initialId = localStorage.getItem('id')\n  const initialUsername = localStorage.getItem('username')\n  const initialLogin = localStorage.getItem('isLogin')\n  const [userIsLoggedIn, setUserIsLoggedIn] = useState(initialLogin);\n  const [userId, setUserId] = useState(initialId)\n  const [loginUsername, setLoginUsername] = useState(initialUsername);\n\n\n  const logoutHandler = () => {\n    setLoginUsername(null);\n    setUserIsLoggedIn(false)\n    localStorage.removeItem('user')\n    localStorage.removeItem('isLogin')\n  }\n\n  const loginHandler = (userData) => {\n    localStorage.setItem('username', userData.username)\n    localStorage.setItem('id',userData.id)\n    localStorage.setItem('isLogin',true)\n    setLoginUsername(userData.username);\n    setUserId(userData.id)\n    setUserIsLoggedIn(true)\n  };\n\n  // console.log(loginUser);\n\n  const contextValue = {\n    user: loginUser,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"]},"metadata":{},"sourceType":"module"}